/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import com.itextpdf.kernel.events.PdfDocumentEvent;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.HorizontalAlignment;
import dao.jpa.CategoriaProdutoDAO;
import dao.jpa.ProdutoDAO;
import entity.jpa.Produto;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import utils.TableModelCreator;
import utils.pdf.Footer;
import utils.pdf.Header;

/**
 *
 * @author Moreno
 */
public class CategoriaProduto extends javax.swing.JInternalFrame {

    private int idSelecionado;
    private static CategoriaProduto myInstance;

    public static CategoriaProduto getInstance() {
        if (myInstance == null) {
            myInstance = new CategoriaProduto();
        }
        return myInstance;
    }

    /**
     * Creates new form CategoriaProduto
     */
    public CategoriaProduto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImprimir = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        tblCategoriaProduto = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Categoria de Produtos");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jScrollPane.setToolTipText("");

        tblCategoriaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCategoriaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoriaProdutoMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(tblCategoriaProduto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir)
                .addContainerGap(98, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnImprimir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        CadastroCategoriaProduto cadastroCategoriaProduto = new CadastroCategoriaProduto(null, true, null);
        cadastroCategoriaProduto.setVisible(true);
        atualizarTabela();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir?", "Atenção", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            CategoriaProdutoDAO categoriaDAO = new CategoriaProdutoDAO();
            entity.jpa.CategoriaProduto categoriaProd = categoriaDAO.selecionarPorCodigo(idSelecionado);
            categoriaDAO.excluir(categoriaProd);
            atualizarTabela();
            JOptionPane.showMessageDialog(this, "Excluído com sucesso", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (idSelecionado > 0) {
            entity.jpa.CategoriaProduto categoriaProd = new CategoriaProdutoDAO().selecionarPorCodigo(idSelecionado);
            CadastroCategoriaProduto tela = new CadastroCategoriaProduto(null, true, categoriaProd);
            tela.setVisible(true);
            atualizarTabela();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tblCategoriaProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoriaProdutoMouseClicked
        // TODO add your handling code here:
        JTable tabela = (JTable) evt.getSource();
        int linha = tabela.rowAtPoint(evt.getPoint());
        // int coluna = tabela.columnAtPoint(evt.getPoint());
        for (int i = 0; i < tabela.getModel().getColumnCount(); i++) {
            String nomeColuna = tabela.getModel().getColumnName(i);
            if (nomeColuna.trim().equals("Id")) {
                idSelecionado = Integer.parseInt(tabela.getValueAt(linha, i) + "");
                break;
            }
        }
        btnEditar.setEnabled(true);
        btnExcluir.setEnabled(true);
    }//GEN-LAST:event_tblCategoriaProdutoMouseClicked

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
        String caminho = selecionarPasta();
        if (!caminho.equals("")) {
            if (gerarPDF(caminho, "categoriaproduto")) {
                abrirPDF(caminho, "categoriaproduto");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao gerar PDF", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        atualizarTabela();
    }//GEN-LAST:event_formInternalFrameActivated

    private void abrirPDF(String caminho, String nomeArquivoPDF) {
        try {
            File arquivo = new File(caminho + "/" + nomeArquivoPDF + ".pdf");
            Desktop.getDesktop().open(arquivo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Arquivo não encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean gerarPDF(String caminho, String nomeArquivoPDF) {
        try {
            PdfWriter writer = new PdfWriter(caminho + "/" + nomeArquivoPDF + ".pdf");
            PdfDocument pdf = new PdfDocument(writer);
            pdf.setTagged();
            pdf.setDefaultPageSize(PageSize.A4);

            Document documento = new Document(pdf);
            documento.setMargins(93, 36, 55, 36);

            Header header = new Header("Listagem de Categoria de Produtos");
            Footer footer = new Footer();

            pdf.addEventHandler(PdfDocumentEvent.START_PAGE, header);
            pdf.addEventHandler(PdfDocumentEvent.END_PAGE, footer);
            Table tabela = new Table(2);
            tabela.setWidth(400);
            tabela.setHorizontalAlignment(HorizontalAlignment.CENTER);
            tabela.addCell("Descrição");
            tabela.addCell("ID");
            for (int i = 0; i < tblCategoriaProduto.getRowCount(); i++) {
                String descricao = tblCategoriaProduto.getValueAt(i, 0).toString();
                String id = tblCategoriaProduto.getValueAt(i, 1).toString();
                tabela.addCell(descricao);
                tabela.addCell(id);
            }
            documento.add(tabela);
            footer.writeTotal(pdf);
            documento.close();
            return true;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ListagemProduto.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    private String selecionarPasta() {
        try {
            JFileChooser arquivo = new JFileChooser();
            arquivo.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            arquivo.showSaveDialog(this);
            return arquivo.getSelectedFile().getPath();
        } catch (Exception ex) {
            return "";
        }
    }

    private void atualizarTabela() {
        try {
            List<entity.jpa.CategoriaProduto> listaCategorias = new CategoriaProdutoDAO().selecionarTodos();
            TableModel tableModelCategoriaProduto = TableModelCreator.createTableModel(entity.jpa.CategoriaProduto.class, listaCategorias, null);
            tblCategoriaProduto.setModel(tableModelCategoriaProduto);
        } catch (Exception ex) {

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCategoriaProduto;
    // End of variables declaration//GEN-END:variables
}
